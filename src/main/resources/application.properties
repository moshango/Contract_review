spring.application.name=Contract_review

# Server Configuration
server.port=8080

# File Upload Configuration
spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=50MB
spring.servlet.multipart.max-request-size=50MB

# Spring MVC Configuration
spring.mvc.throw-exception-if-no-handler-found=true
spring.web.resources.add-mappings=true

# Jackson Configuration
spring.jackson.default-property-inclusion=non_null
spring.jackson.serialization.indent_output=true

# Logging Configuration
logging.level.com.example.Contract_review=DEBUG
logging.level.com.example.Contract_review.service=DEBUG
logging.level.com.example.Contract_review.util=DEBUG
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n

# DevTools Configuration - 禁用自动重启和LiveReload
spring.devtools.restart.enabled=false
spring.devtools.livereload.enabled=false

# AI Service Configuration
# 可选值: claude / openai / doubao / mock / chatgpt-web / none
# 如果豆包API网络连接有问题，请切换到mock模式进行测试
# ai.service.provider=chatgpt-web
# ai.service.provider=mock
# ai.service.provider=claude
# ai.service.provider=openai
# ai.service.provider=doubao
ai.service.provider=doubao

# 备用模式说明：
# 如果豆包API持续失败，请临时切换到mock模式：
# ai.service.provider=mock

# 网络问题解决方案：
# 1. 直接访问（无代理）: ai.service.proxy.enabled=false
# 2. HTTP代理访问: ai.service.proxy.enabled=true, ai.service.proxy.type=HTTP
# 3. SOCKS代理访问: ai.service.proxy.enabled=true, ai.service.proxy.type=SOCKS
# 4. Mock模式测试: ai.service.provider=mock

# Claude Configuration
ai.service.claude.api-key=
ai.service.claude.api-endpoint=https://api.anthropic.com/v1/messages
ai.service.claude.model=claude-3-5-sonnet-20241022
ai.service.claude.max-tokens=4096

# OpenAI Configuration
ai.service.openai.api-key=
ai.service.openai.api-endpoint=https://api.openai.com/v1/chat/completions
ai.service.openai.model=gpt-4
ai.service.openai.max-tokens=4096

# 豆包（DouBao）Configuration - 火山引擎豆包大模型
# 方式1: 使用API Key认证 (Bearer token方式) - 当前使用
ai.service.doubao.api-key=

# 方式2: 使用Access Key签名认证 (推荐) - 暂时禁用以避免签名算法问题
# ai.service.doubao.access-key-id=
# ai.service.doubao.secret-access-key=
# ai.service.doubao.region=cn-beijing

# 豆包API端点和模型配置
ai.service.doubao.api-endpoint=https://ark.cn-beijing.volces.com/api/v3/chat/completions
ai.service.doubao.model=ep-20241014152622-vvjrn
ai.service.doubao.max-tokens=4096

# AI Service Timeout and Retry
ai.service.timeout=60
ai.service.max-retries=3

# Proxy Configuration - 直连可用，禁用代理
# 检测到系统代理: http://127.0.0.1:33210，但直连更稳定
ai.service.proxy.enabled=false
ai.service.proxy.host=127.0.0.1
ai.service.proxy.port=33210
ai.service.proxy.type=HTTP

# 网络优化：如果直连失败，可以尝试启用代理
# ai.service.proxy.enabled=true

# ============================================================
# Qwen (通义千问) Configuration
# ============================================================
# 获取 API Key: https://dashscope.console.aliyun.com/
#
# 地区配置:
# - 中国区: https://dashscope.aliyuncs.com/compatible-mode/v1
# - 新加坡区: https://dashscope-intl.aliyuncs.com/compatible-mode/v1

# API 密钥 (直接在此配置，无需环境变量)
# 请将 sk-xxxxxxxxxxxxxxxx 替换为实际的 API Key
qwen.api-key=sk-3098eac61f7140f4aeb20cac3a030ed2

# API 基础 URL (中国区)
qwen.base-url=https://dashscope.aliyuncs.com/compatible-mode/v1

# 模型名称 (支持: qwen-max, qwen-plus, qwen-turbo, qwen-long 等)
qwen.model=qwen-vl-max-latest

# 超时时间 (秒)
qwen.timeout=30
